/*
 * Global CSS variables define colours for the light and dark themes.  You can
 * switch between themes by toggling the `data-theme` attribute on the `body`
 * element.  Components reference these variables instead of hard–coding
 * colours to make theme switching seamless.
 */
:root {
  --color-bg: #ffffff;
  --color-surface: #f7f7f7;
  --color-primary: #0078d4;
  --color-secondary: #00b7c2;
  --color-text: #1f2933;
  --color-muted: #6b7280;
  --color-border: #e5e7eb;
}

/* Dark theme overrides: these variables apply when the body has
 * data-theme="dark".  Colours are adjusted for contrast and to reduce
 * eye strain in low‑light environments.  The overall aesthetic is kept
 * consistent with the light theme.
 */
body[data-theme="dark"] {
  --color-bg: #121212;
  --color-surface: #1e1e1e;
  --color-primary: #0d6efd;
  --color-secondary: #00bcd4;
  --color-text: #f5f5f5;
  --color-muted: #9ca3af;
  --color-border: #2d2d2d;
}

/* Base typography and layout rules */
body {
  margin: 0;
  padding: 0;
  font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Oxygen,
    Ubuntu, Cantarell, "Open Sans", "Helvetica Neue", sans-serif;
  background-color: var(--color-bg);
  color: var(--color-text);
  line-height: 1.5;
}

/* Container for the entire app.  Uses flexbox to lay out the sidebar
 * and main content area horizontally.  The sidebar has a fixed width
 * while the content area flexes to fill the remaining space.
 */
.app-container {
  display: flex;
  height: 100vh;
  width: 100%;
}

/* Sidebar navigation styles.  It occupies 220px on the left side of the
 * viewport.  A subtle border separates it from the main content.  Items
 * inside the sidebar are stacked vertically and can be highlighted when
 * active.
 */
.sidebar {
  width: 220px;
  background-color: var(--color-surface);
  border-right: 1px solid var(--color-border);
  display: flex;
  flex-direction: column;
  padding: 1rem;
  box-sizing: border-box;
}

.sidebar h1 {
  font-size: 1.2rem;
  margin-bottom: 1rem;
  color: var(--color-primary);
}

.nav-link {
  padding: 0.6rem 0.8rem;
  margin-bottom: 0.2rem;
  border-radius: 4px;
  color: var(--color-text);
  text-decoration: none;
  font-weight: 500;
  display: block;
}

.nav-link:hover {
  background-color: var(--color-primary);
  color: #ffffff;
}

.nav-link.active {
  background-color: var(--color-primary);
  color: #ffffff;
}

/* Top header bar in the content area.  Contains the page title and actions
 * such as theme toggling.  This header uses flexbox to align items
 * horizontally and to create space between them.  A bottom border
 * separates it visually from the page content below.
 */
.header {
  background-color: var(--color-surface);
  padding: 0.75rem 1rem;
  border-bottom: 1px solid var(--color-border);
  display: flex;
  align-items: center;
  justify-content: space-between;
}

.header h2 {
  margin: 0;
  font-size: 1.1rem;
}

.header .actions {
  display: flex;
  align-items: center;
  gap: 0.75rem;
}

/* Generic button component.  Resets default styling and uses CSS
 * variables to set the colour scheme.  Buttons are small and subtle by
 * default but change colour on hover.
 */
.button {
  background-color: var(--color-primary);
  color: #ffffff;
  border: none;
  padding: 0.5rem 0.8rem;
  border-radius: 4px;
  cursor: pointer;
  font-size: 0.9rem;
}

.button.secondary {
  background-color: var(--color-secondary);
}

.button.outline {
  background-color: transparent;
  border: 1px solid var(--color-primary);
  color: var(--color-primary);
}

.button:hover {
  opacity: 0.9;
}

/* Main content area where pages are rendered.  Padding adds whitespace
 * around the content.  Overflow auto ensures long content is scrollable.
 */
.content {
  flex: 1;
  display: flex;
  flex-direction: column;
  overflow: auto;
  background-color: var(--color-bg);
}

/* Generic card component to wrap data panels.  Cards separate content
 * visually from the background using a subtle shadow and border.  They
 * are responsive and adjust their width automatically.  Use flexbox
 * inside cards to layout content elements.
 */
.card {
  background-color: var(--color-surface);
  border: 1px solid var(--color-border);
  border-radius: 6px;
  padding: 1rem;
  margin-bottom: 1rem;
  box-shadow: 0 1px 2px rgba(0, 0, 0, 0.05);
}

.card h3 {
  margin-top: 0;
  margin-bottom: 0.5rem;
}

/* Simple table styles for listing devices and networks.  We use
 * border-collapse to collapse cell borders and lighten the border colour.
 */
table {
  width: 100%;
  border-collapse: collapse;
}

th,
td {
  padding: 0.6rem;
  text-align: left;
  border-bottom: 1px solid var(--color-border);
}

th {
  background-color: var(--color-surface);
  font-weight: 600;
}

tr:hover {
  background-color: rgba(0, 0, 0, 0.02);
}

/* Responsive layout tweaks for smaller screens.  When the viewport
 * width falls below 768px, the sidebar collapses into a top navigation
 * bar.  The flex directions change to stack elements vertically.
 */
@media (max-width: 768px) {
  .app-container {
    flex-direction: column;
  }
  .sidebar {
    width: 100%;
    flex-direction: row;
    align-items: center;
    justify-content: space-around;
    border-right: none;
    border-bottom: 1px solid var(--color-border);
  }
  .nav-link {
    margin-bottom: 0;
  }
  .content {
    flex: 1;
  }
}